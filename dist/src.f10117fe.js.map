{"version":3,"sources":["src/config.ts","src/requests.ts","src/task1/Task1.ts","src/task2/Task2.ts","src/task3/Task3.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const configuration = {\r\n  countriesKey: 'allCountries',\r\n  dateKey: 'dateWhenSaved',\r\n};\r\n","import { Country } from './types/interfaces';\r\n\r\nexport const getCountriesData = async (): Promise<Country[]> => {\r\n  return (await fetch('https://restcountries.com/v2/all')\r\n    .then((res) => res.json())\r\n    .then((data) => data)) as Country[];\r\n};\r\n","import { configuration } from '../config';\r\nimport { getCountriesData } from '../requests';\r\nimport { Country } from '../types/interfaces';\r\n\r\nexport const Task1 = async (localStorageCountriesData: Country[]) => {\r\n  const currentDate = Date.now();\r\n  const msOf7Days = 604_800_000;\r\n\r\n  // Check if the data is in the localStorage\r\n  if (!localStorageCountriesData) {\r\n    console.log('❗ Data does not exist ❗');\r\n\r\n    // Get data from api\r\n    const countries: Country[] = await getCountriesData();\r\n\r\n    // Save countries data to LocalStorage, save\r\n    localStorage.setItem(configuration.countriesKey, JSON.stringify(countries));\r\n    localStorage.setItem(configuration.dateKey, currentDate.toString());\r\n\r\n    console.log('📝 Data saved in localStorage.');\r\n    console.log('📢 Refresh page!');\r\n  } else {\r\n    const dateFromLocalStorage: string | null = localStorage.getItem(configuration.dateKey);\r\n    const lastSaveDate: string | number = typeof dateFromLocalStorage === 'string' ? parseInt(dateFromLocalStorage) : currentDate;\r\n\r\n    const numericDateFromLocalStorage: number = lastSaveDate;\r\n    const localStorageData: Country[] = localStorageCountriesData;\r\n    const currDate: number = currentDate;\r\n    const nextUpdate: number = numericDateFromLocalStorage + msOf7Days;\r\n\r\n    console.log('✔️ Data exist in localStorage ✔️');\r\n    console.log('\\n📅 Data of save:\\n\\n', new Date(numericDateFromLocalStorage));\r\n    console.log('\\n📄 localStorage data:\\n', localStorageData);\r\n\r\n    // If you exceed possiblyNextUpdateData proceed\r\n    if (currDate >= nextUpdate) {\r\n      console.log('📝 Now you updating data!');\r\n\r\n      const oldData: Country[] = localStorageData;\r\n      const newData: Country[] = await getCountriesData();\r\n\r\n      console.log('🟨 Changed data is in:\\n', compareData(oldData, newData));\r\n\r\n      localStorage.setItem(configuration.countriesKey, JSON.stringify(newData));\r\n      localStorage.setItem(configuration.dateKey, currentDate.toString());\r\n    }\r\n  }\r\n};\r\n\r\nexport const compareData = (oldest: Country[], newest: Country[]): string[] => {\r\n  const changedData: string[] = [];\r\n\r\n  oldest.forEach((old, i) => {\r\n    if (old.alpha2Code === newest[i].alpha2Code) {\r\n      old.population !== newest[i].population ? changedData.push(old.name) : null;\r\n    }\r\n  });\r\n\r\n  return changedData;\r\n};\r\n","import { Country } from '../types/interfaces';\r\n\r\nexport const Task2 = async (localStorageCountriesData: Country[]) => {\r\n  // Select all EU countries\r\n  const enterCountryValuePathToSearchFor: string = 'regionalBlocs.acronym';\r\n  const enterCountryValueToSearchFor: string = 'EU';\r\n  const whetherToContain: boolean = true;\r\n  const arrayOfCountries: Country[] | string = getAllCountriesByTypeAndValue(localStorageCountriesData, enterCountryValuePathToSearchFor, enterCountryValueToSearchFor, whetherToContain);\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}: \\n`, arrayOfCountries);\r\n\r\n  // From all EU countries take countries which include any letter\r\n  const enterPhrasePathToSearchFor: string = 'name';\r\n  const enterPhraseToSearchFor: string = 'a';\r\n  const arrayOfCountriesContainingPhrase: Country[] | string = selectCountriesIncludesAnyLetter(arrayOfCountries, enterPhrasePathToSearchFor, enterPhraseToSearchFor);\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}':\\n`, arrayOfCountriesContainingPhrase);\r\n\r\n  // From all EU countries take countries which include 'a' and sort descending\r\n  const enterSortPathToSearchFor: string = 'population';\r\n  const enterSortToSearchFor: 'desc' | 'asc' = 'desc';\r\n  const arrayOfSortedCountries = sortCountriesByType(arrayOfCountriesContainingPhrase, enterSortPathToSearchFor, enterSortToSearchFor);\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}', sorted ${enterSortToSearchFor.toUpperCase()}: \\n`, arrayOfSortedCountries);\r\n\r\n  // From all EU countries take countries which include 'a', sort descending and calculate the population sum\r\n  const enterLimit: number = 5;\r\n  const enterTypeLimit = 'population';\r\n  const populateOfLimitedArray = calculateSumCountriesByType(arrayOfSortedCountries, enterTypeLimit, enterLimit);\r\n  const isBigger = populateOfLimitedArray > 500_000_000 ? '↗️ bigger' : '↘️ less';\r\n  console.log(\r\n    `\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}', sorted ${enterSortToSearchFor.toUpperCase()} and calculate population ➕: \\n\\n   Population ${enterLimit} countries is equal:`,\r\n    populateOfLimitedArray,\r\n    `And it's ${isBigger} than 500 million.`\r\n  );\r\n};\r\n\r\nexport const getAllCountriesByTypeAndValue = (countries: Country[], types: string, value: string, containingOrNot: boolean) => {\r\n  const typesData = types.split('.');\r\n  // I try use regex instead data[typesData[1]] === value but i getting different data\r\n  // const regex = new RegExp(value, 'gm');\r\n  // console.log(regex);\r\n  // regex.exec(data[typesData[1]])\r\n\r\n  return countries.filter((country: any) => {\r\n    const arrayPath = country[typesData[0]];\r\n\r\n    if (arrayPath) {\r\n      if (containingOrNot) {\r\n        if (Array.isArray(arrayPath) && typeof arrayPath[0] === 'object') return arrayPath.some((data) => data[typesData[1]] === value);\r\n        if (Array.isArray(arrayPath) && typeof arrayPath[0] === 'string') return arrayPath.includes(value);\r\n        return arrayPath === value;\r\n      } else {\r\n        if (Array.isArray(arrayPath) && typeof arrayPath[0] === 'object') return arrayPath.some((data) => data[typesData[1]] !== value);\r\n        if (Array.isArray(arrayPath) && typeof arrayPath[0] === 'string') return !arrayPath.includes(value);\r\n        return arrayPath !== value;\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const selectCountriesIncludesAnyLetter = (countries: any, type: string, value: string): Country[] => {\r\n  return countries.filter((country: any) => country[type].includes(value.toUpperCase()) || country[type].includes(value.toLowerCase()));\r\n};\r\n\r\nexport const sortCountriesByType = (array: Country[], type: string, enterSortType: string): Country[] => {\r\n  const sortArrayDesc = (first: any, next: any) => {\r\n    return next[type] - first[type];\r\n  };\r\n\r\n  const sortArrayAsc = (first: any, next: any) => {\r\n    return first[type] - next[type];\r\n  };\r\n\r\n  const sortArray: Country[] = [...array];\r\n\r\n  enterSortType === 'desc' ? sortArray.sort(sortArrayDesc) : sortArray.sort(sortArrayAsc);\r\n\r\n  return sortArray;\r\n};\r\n\r\nexport const calculateSumCountriesByType = (countries: any, type: string, limit: number): number => {\r\n  const limitedArray = countries.slice(0, limit);\r\n\r\n  let populate = 0;\r\n  limitedArray.forEach((country: any) => {\r\n    populate += country[type];\r\n  });\r\n\r\n  return populate;\r\n};\r\n","import { getAllCountriesByTypeAndValue, sortCountriesByType } from '../task2/Task2';\r\nimport { Acronyms, Country, Languages } from '../types/interfaces';\r\n\r\nexport const Task3 = (localStorageCountriesData: Country[]) => {\r\n  const acronyms: Acronyms = {\r\n    EU: {\r\n      countries: [],\r\n      population: 0,\r\n      languages: {},\r\n      currencies: [],\r\n      area: 0,\r\n    },\r\n    NAFTA: {\r\n      countries: [],\r\n      population: 0,\r\n      languages: {},\r\n      currencies: [],\r\n      area: 0,\r\n    },\r\n    AU: {\r\n      countries: [],\r\n      population: 0,\r\n      languages: {},\r\n      currencies: [],\r\n      area: 0,\r\n    },\r\n    other: {\r\n      countries: [],\r\n      population: 0,\r\n      languages: {},\r\n      currencies: [],\r\n      area: 0,\r\n    },\r\n  };\r\n\r\n  const euCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'EU', true);\r\n  const naftaCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'NAFTA', true);\r\n  const auCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'AU', true);\r\n  const countriesWithoutEuNaftaAu: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'AU EU NAFTA', false);\r\n\r\n  getCountriesDataAbout(euCountries, 'EU', acronyms);\r\n  getCountriesDataAbout(naftaCountries, 'NAFTA', acronyms);\r\n  getCountriesDataAbout(auCountries, 'AU', acronyms);\r\n  getCountriesDataAbout(countriesWithoutEuNaftaAu, 'other', acronyms);\r\n\r\n  console.log('\\n🔸 The name of the organization with the largest population:', sortObject(acronyms, { value: 'population', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 Name of the organization with the second largest population:', sortObject(acronyms, { value: 'population', place: 2, sort: 'desc' }));\r\n  console.log('\\n🔸 The name of the organization occupying the third largest area:', sortObject(acronyms, { value: 'area', place: 3, sort: 'desc' }));\r\n  console.log(\r\n    '\\n🔸 Names of organizations with the largest and smallest number of languages assigned to them:\\n',\r\n    'Largest:',\r\n    sortObject(acronyms, { value: 'languages', place: 1, sort: 'desc' }),\r\n    '\\n Smallest:',\r\n    sortObject(acronyms, { value: 'languages', place: 1, sort: 'asc' })\r\n  );\r\n  console.log('\\n🔸 Name of the organization using the largest number of currencies:', sortObject(acronyms, { value: 'currencies', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 The name of the organization with the fewest number of member states:', sortObject(acronyms, { value: 'countries', place: 1, sort: 'asc' }));\r\n\r\n  console.log('\\n🔸 Native name of the language used in the greatest number of countries:', sortObjectLang(acronyms, { value: 'area', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 Native name of the language used by the smallest number of people:', sortObjectLang(acronyms, { value: 'population', place: 1, sort: 'asc' }));\r\n  console.log(\r\n    '\\n🔸 Native names of the languages used in the largest and smallest area:\\n',\r\n    'Largest:',\r\n    sortObjectLang(acronyms, { value: 'area', place: 1, sort: 'desc' }),\r\n    '\\n Smallest:',\r\n    sortObjectLang(acronyms, { value: 'area', place: 1, sort: 'asc' })\r\n  );\r\n\r\n  console.log('\\n🟠 EU, NAFTA, AU and other countries: \\n', acronyms);\r\n};\r\n\r\nexport const getCountriesDataAbout = (array: Country[], acronym: keyof Acronyms, acronyms: Acronyms) => {\r\n  const path = acronyms[acronym];\r\n\r\n  array.forEach((country) => {\r\n    path.countries.push(country.nativeName);\r\n    country.currencies?.every((currencie) => path.currencies.push(currencie.name));\r\n    path.population += country.population;\r\n    typeof country.area === 'number' && (path.area += country.area);\r\n\r\n    const langKeys = Object.keys(path.languages);\r\n    const countryLang = country.languages.map((lang) => lang.iso639_1);\r\n\r\n    countryLang.forEach((lang, i) => {\r\n      if (lang === langKeys[i]) {\r\n        path.languages[lang].countries.push(country.languages[i].nativeName);\r\n        path.languages[lang].name.push(country.alpha3Code);\r\n        path.languages[lang].area += country.area;\r\n        path.languages[lang].population += country.population;\r\n      } else {\r\n        const language = country.languages[i].iso639_1;\r\n        const countries = country.alpha3Code;\r\n        const name = country.languages[i].nativeName;\r\n        const area = country.area;\r\n        const population = country.population;\r\n        path.languages = { ...path.languages, ...{ [language]: { population, area, name: [name], countries: [countries] } } };\r\n      }\r\n    });\r\n  });\r\n\r\n  const unique = new Set(path.currencies);\r\n  path.currencies = Array.from(unique);\r\n  path.countries = path.countries.sort().reverse();\r\n};\r\n\r\nexport const sortObject = (object: Acronyms, arg: { value: keyof Acronyms; place: number; sort: string }): string => {\r\n  const countryKeys = Object.keys(object);\r\n  const array: string[] | number[] = [];\r\n  const index = arg.place - 1;\r\n  const result: string[] = [];\r\n\r\n  countryKeys.forEach((key) => {\r\n    const value = object[key][arg.value];\r\n    const valueLength = Object.getOwnPropertyNames(value).length;\r\n    if (typeof value === 'object') array.push(valueLength);\r\n    if (typeof value !== 'object') array.push(value);\r\n  });\r\n\r\n  let sortedArray: string[] | number[] = [];\r\n  if (arg.sort === 'desc') {\r\n    sortedArray = array.sort((a: any, b: any) => b - a);\r\n  } else {\r\n    sortedArray = array.sort((a: any, b: any) => a - b);\r\n  }\r\n\r\n  countryKeys.forEach((key) => {\r\n    const value = object[key][arg.value];\r\n    const valueLength = Object.getOwnPropertyNames(value).length;\r\n\r\n    if (typeof value === 'object' && valueLength === sortedArray[index]) result.push(key);\r\n    if (typeof value !== 'object' && value === sortedArray[index]) result.push(key);\r\n  });\r\n\r\n  return result.toString();\r\n};\r\n\r\nconst sortObjectLang = (object: Acronyms, arg: { value: keyof Acronyms; place: number; sort: string }) => {\r\n  const countryKeys = Object.keys(object);\r\n  const array: string[] | number[] = [];\r\n  const index = arg.place - 1;\r\n  const result: string[] = [];\r\n\r\n  countryKeys.forEach((countryKey) => {\r\n    const languagesKeys = Object.keys(object[countryKey].languages);\r\n\r\n    languagesKeys.forEach((langKey) => {\r\n      const value = object[countryKey].languages[langKey][arg.value];\r\n      const valueLength = value.length;\r\n      if (typeof value === 'object') array.push(valueLength);\r\n      if (typeof value !== 'object') array.push(value);\r\n    });\r\n  });\r\n\r\n  let sortedArray: string[] | number[] = [];\r\n  if (arg.sort === 'desc') {\r\n    sortedArray = array.sort((a: any, b: any) => b - a);\r\n  } else {\r\n    sortedArray = array.sort((a: any, b: any) => a - b);\r\n  }\r\n\r\n  countryKeys.forEach((countryKey) => {\r\n    const languagesKeys = Object.keys(object[countryKey].languages);\r\n\r\n    languagesKeys.forEach((langKey) => {\r\n      const value = object[countryKey].languages[langKey][arg.value];\r\n      const valueLength = value.length;\r\n\r\n      if (typeof value === 'object' && valueLength === sortedArray[index]) result.push(object[countryKey].languages[langKey].name[0]);\r\n      if (typeof value !== 'object' && value === sortedArray[index]) result.push(object[countryKey].languages[langKey].name[0]);\r\n    });\r\n  });\r\n\r\n  const set = new Set(result);\r\n  const endResult = Array.from(set);\r\n  return endResult.toString();\r\n};\r\n\r\n/*\r\n✔ * Stwórz nowy obiekt. Powinien on posiadać klucze EU, NAFTA, AU oraz other. Każdy z tych kluczy będzie zawierał obiekt o kluczach countries, population, languages oraz currencies.\r\n  Wartościami countries oraz currencies są puste tablice, wartość population wynosi 0. Wartość languages to pusty obiekt.\r\n✔ * W TP znajdź kraje należące do EU, NAFTA albo AU. Jeśli państwo należy do którejś z tych grup, umieść jego dane w stosownym obiekcie: natywną nazwę w tablicy countries, używane przez nią\r\n  waluty w tablicy currencies oraz dodaj jej populację do wartości population.\r\n✔ * Sprawdź języki przypisane do kraju. Użyj ich kodu iso639_1 jako klucza dla obiektu languages. Jeśli danego języka nie ma w obiekcie languages, przypisz do niego nowy obiekt o kluczach\r\n  countries(wartość początkowa: pusta arajka), population(0), area(0) oraz name(pusty string). Jeśli dany język znajduje się w obiekcie languages, dodaj do tablicy countries kod alpha3code\r\n  kraju, w którym jest używany, populację tego kraju do wartości population, obszar kraju do wartości area, a do name przypisz natywną nazwę tego języka.\r\n✔ * Jeśli kraj nie należy do żadnej z podanych wcześniej organizacji wykonaj kroki z poprzednich dwóch punktów, ale dane umieść w tablicy other.\r\n✔ * Jeśli kraj należy do więcej, niż jednej organizacji, umieść jego dane we wszystkich pasujących obiektach bloków. Blok other może się powtarzać.\r\n✔ * Dla każdej organizacji dane w tablicy currencies nie mogą się powtarzać.\r\n✔ * Dla każdej organizacji dane w tablicy countries powinny być posortowane alfabetycznie z do a.\r\n* Wyświetl w konsoli:\r\n ✔- Nazwę organizacji o największej populacji,\r\n ✔- Nazwę organizacji o drugiej największej gęstości zaludnienia,\r\n ✔- Nazwę organizacji zajmującej trzeci największy obszar,\r\n ✔- Nazwy organizacji o największej i najmniejszej przypisanej do nich liczbie języków,\r\n ✔- Nazwę organizacji wykorzystującej największą liczbę walut,\r\n ✔- Nazwę organizacji posiadającej najmniejszą liczbę państw członkowskich,\r\n ✔- Natywną nazwę języka wykorzystywanego w największej liczbie krajów,\r\n ✔- Natywną nazwę języka wykorzystywanego przez najmniejszą liczbę ludzi,\r\n ✔- Natywne nazwy języków wykorzystywanych na największym i najmniejszym obszarze.\r\n✔ * W przypadku remisów wyświetl wszystkich zwycięzców.\r\n*/\r\n","import { configuration } from './config';\r\nimport { Task1 } from './task1/Task1';\r\nimport { Task2 } from './task2/Task2';\r\nimport { Task3 } from './task3/Task3';\r\n\r\nwindow.onload = () => {\r\n  const localStorageSavedData: string | null = localStorage.getItem(configuration.countriesKey);\r\n  const localStorageCountriesData = typeof localStorageSavedData === 'string' && JSON.parse(localStorageSavedData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 1     ║\\n╚═══════════════╝');\r\n  Task1(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 2     ║\\n╚═══════════════╝');\r\n  Task2(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 3     ║\\n╚═══════════════╝');\r\n  Task3(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║     Logs      ║\\n╚═══════════════╝');\r\n};\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}