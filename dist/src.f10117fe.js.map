{"version":3,"sources":["src/config.ts","src/requests.ts","src/task1/Task1.ts","src/task2/Task2.ts","src/task3/Task3.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const configuration = {\r\n  countriesKey: 'allCountries',\r\n  dateKey: 'dateWhenSaved',\r\n  msOfDays: 604_800_000,\r\n  numberOfPopulate: 500_000_000,\r\n};\r\n","import { Country } from './types/interfaces';\r\n\r\nexport const getCountriesData = async (): Promise<Country[]> => {\r\n  return (await fetch('https://restcountries.com/v2/all')\r\n    .then((res) => res.json())\r\n    .then((data) => data)) as Country[];\r\n};\r\n","import { configuration } from '../config';\r\nimport { getCountriesData } from '../requests';\r\nimport { Country } from '../types/interfaces';\r\n\r\nexport const Task1 = async (localStorageCountriesData: Country[]) => {\r\n  const currentDate = Date.now();\r\n\r\n  // Check if the data is in the localStorage\r\n  if (!localStorageCountriesData) {\r\n    console.log('❗ Data does not exist ❗');\r\n\r\n    // Get data from api\r\n    const countries: Country[] = await getCountriesData();\r\n\r\n    // Save countries data to LocalStorage, save\r\n    localStorage.setItem(configuration.countriesKey, JSON.stringify(countries));\r\n    localStorage.setItem(configuration.dateKey, currentDate.toString());\r\n\r\n    console.log('📝 Data saved in localStorage.');\r\n    console.log('📢 Refresh page!');\r\n  } else {\r\n    const dateFromLocalStorage: string | null = localStorage.getItem(configuration.dateKey);\r\n    const lastSaveDate: string | number = typeof dateFromLocalStorage === 'string' ? parseInt(dateFromLocalStorage) : currentDate;\r\n\r\n    const numericDateFromLocalStorage: number = lastSaveDate;\r\n    const localStorageData: Country[] = localStorageCountriesData;\r\n    const currDate: number = currentDate;\r\n    const nextUpdate: number = numericDateFromLocalStorage + configuration.msOfDays;\r\n\r\n    console.log('✔️ Data exist in localStorage ✔️');\r\n    console.log('\\n📅 Data of save:\\n\\n', new Date(numericDateFromLocalStorage));\r\n    console.log('\\n📄 localStorage data:\\n', localStorageData);\r\n\r\n    // If you exceed possiblyNextUpdateData proceed\r\n    if (currDate >= nextUpdate) {\r\n      console.log('📝 Now you updating data!');\r\n\r\n      const oldData: Country[] = localStorageData;\r\n      const newData: Country[] = await getCountriesData();\r\n\r\n      console.log('🟨 Changed data is in:\\n', compareData(oldData, newData));\r\n\r\n      localStorage.setItem(configuration.countriesKey, JSON.stringify(newData));\r\n      localStorage.setItem(configuration.dateKey, currentDate.toString());\r\n    }\r\n  }\r\n};\r\n\r\nexport const compareData = (oldest: Country[], newest: Country[]): Country[] => {\r\n  return oldest.filter((old, i) => {\r\n    if (old.alpha2Code === newest[i].alpha2Code) {\r\n      if (old.population !== newest[i].population) return old.name;\r\n    }\r\n  });\r\n};\r\n","import { configuration } from '../config';\r\nimport { Country } from '../types/interfaces';\r\n\r\nexport const Task2 = async (localStorageCountriesData: Country[]) => {\r\n  // Select all EU countries\r\n  const enterCountryValuePathToSearchFor: string = 'regionalBlocs.acronym';\r\n  const enterCountryValueToSearchFor: string = 'EU';\r\n  const whetherToContain: boolean = true;\r\n  const arrayOfCountries: Country[] | string = getAllCountriesByTypeAndValue(localStorageCountriesData, {\r\n    path: enterCountryValuePathToSearchFor,\r\n    value: enterCountryValueToSearchFor,\r\n    contain: whetherToContain,\r\n  });\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}: \\n`, arrayOfCountries);\r\n\r\n  // From all EU countries take countries which include any letter\r\n  const enterPhrasePathToSearchFor = 'name';\r\n  const enterPhraseToSearchFor: string = 'a';\r\n  const enterTypeOfSelectOrDelete: 'select' | 'delete' = 'delete';\r\n  const arrayOfCountriesContainingPhrase: Country[] | string = selectOrDeleteCountriesIncludesAnyLetter(arrayOfCountries, {\r\n    path: enterPhrasePathToSearchFor,\r\n    value: enterPhraseToSearchFor,\r\n    selectOrDelete: enterTypeOfSelectOrDelete,\r\n  });\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}':\\n`, arrayOfCountriesContainingPhrase);\r\n\r\n  // From all EU countries take countries which include 'a' and sort descending\r\n  const enterSortPathToSearchFor = 'population';\r\n  const enterSortToSearchFor: 'desc' | 'asc' = 'desc';\r\n  const arrayOfSortedCountries = sortCountriesByType(arrayOfCountriesContainingPhrase, { path: enterSortPathToSearchFor, sortType: enterSortToSearchFor });\r\n  console.log(`\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}', sorted ${enterSortToSearchFor.toUpperCase()}: \\n`, arrayOfSortedCountries);\r\n\r\n  // From all EU countries take countries which include 'a', sort descending and calculate the population sum\r\n  const enterLimit: number = 5;\r\n  const enterPathLimit = 'population';\r\n  const populateOfLimitedArray = calculateSumCountriesByType(arrayOfSortedCountries, { path: enterPathLimit, limit: enterLimit });\r\n  const isBigger = populateOfLimitedArray > configuration.numberOfPopulate ? '↗️ bigger' : '↘️ less';\r\n  console.log(\r\n    `\\n🔹 Countries of the ${enterCountryValueToSearchFor}, include '${enterPhraseToSearchFor.toUpperCase()}', sorted ${enterSortToSearchFor.toUpperCase()} and calculate population ➕: \\n\\n   Population ${enterLimit} countries is equal:`,\r\n    populateOfLimitedArray,\r\n    `And it's ${isBigger} than 500 million.`\r\n  );\r\n};\r\n\r\nexport const getAllCountriesByTypeAndValue = (countries: Country[], arg: { path: string; value: string; contain: boolean }): Country[] => {\r\n  const typesData = arg.path.split('.');\r\n\r\n  return countries.filter((country: Country) => {\r\n    // @ts-ignore\r\n    const arrayPath = country[typesData[0]];\r\n\r\n    if (!arrayPath) return false;\r\n\r\n    const isStringArray = Array.isArray(arrayPath) && typeof arrayPath[0] === 'string';\r\n    const isObjectArray = Array.isArray(arrayPath) && typeof arrayPath[0] === 'object';\r\n\r\n    if (arg.contain) {\r\n      if (isObjectArray) return arrayPath.some((data) => data[typesData[1]] === arg.value);\r\n      if (isStringArray) return arrayPath.includes(arg.value);\r\n      return arrayPath === arg.value;\r\n    } else {\r\n      if (isObjectArray) return arrayPath.some((data) => data[typesData[1]] !== arg.value);\r\n      if (isStringArray) return !arrayPath.includes(arg.value);\r\n      return arrayPath !== arg.value;\r\n    }\r\n  });\r\n};\r\n\r\nexport const selectOrDeleteCountriesIncludesAnyLetter = (countries: Country[], arg: { path: keyof Country; value: string; selectOrDelete: 'select' | 'delete' }): Country[] => {\r\n  return countries.filter((country) => {\r\n    if (typeof country[arg.path] === 'string') {\r\n      // @ts-ignore this if above sould be enough\r\n      return arg.selectOrDelete === 'select' ? country[arg.path].toUpperCase().includes(arg.value.toUpperCase()) : !country[arg.path].toUpperCase().includes(arg.value.toUpperCase());\r\n    }\r\n  });\r\n};\r\n\r\nexport const sortCountriesByType = (array: Country[], arg: { path: keyof Country; sortType: 'desc' | 'asc' }): Country[] => {\r\n  const sortArrayDesc = (first: any, next: any) => {\r\n    return next[arg.path] - first[arg.path];\r\n  };\r\n\r\n  const sortArrayAsc = (first: any, next: any) => {\r\n    return first[arg.path] - next[arg.path];\r\n  };\r\n\r\n  return arg.sortType === 'desc' ? [...array].sort(sortArrayDesc) : [...array].sort(sortArrayAsc);\r\n};\r\n\r\nexport const calculateSumCountriesByType = (countries: Country[], arg: { path: keyof Country; limit: number }): number => {\r\n  const limitedArray = countries.slice(0, arg.limit);\r\n\r\n  let sum = 0;\r\n  limitedArray.forEach((country: Country) => {\r\n    // @ts-ignore this if should be enough\r\n    if (typeof country[arg.path] === 'number') sum += country[arg.path];\r\n  });\r\n\r\n  return sum;\r\n};\r\n","import { getAllCountriesByTypeAndValue } from '../task2/Task2';\r\nimport { CountriesStats, Country, CountryStat, LangStat } from '../types/interfaces';\r\n\r\nconst countryStat: CountryStat = {\r\n  countries: [],\r\n  population: 0,\r\n  languages: {},\r\n  currencies: [],\r\n  area: 0,\r\n};\r\nconst countriesStats: CountriesStats = {};\r\n\r\n['EU', 'NAFTA', 'AU', 'other'].forEach((country) => (countriesStats[country] = { ...countryStat }));\r\n\r\nexport const Task3 = (localStorageCountriesData: Country[]) => {\r\n  const euCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, { path: 'regionalBlocs.acronym', value: 'EU', contain: true });\r\n  const naftaCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, { path: 'regionalBlocs.acronym', value: 'NAFTA', contain: true });\r\n  const auCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, { path: 'regionalBlocs.acronym', value: 'AU', contain: true });\r\n  const countriesWithoutEuNaftaAu: Country[] = localStorageCountriesData.filter((country) => country.regionalBlocs?.some((bloc) => !['EU', 'NAFTA', 'AU'].includes(bloc.acronym)));\r\n\r\n  getCountryStats(euCountries, { acronym: 'EU', object: countriesStats });\r\n  getCountryStats(naftaCountries, { acronym: 'NAFTA', object: countriesStats });\r\n  getCountryStats(auCountries, { acronym: 'AU', object: countriesStats });\r\n  getCountryStats(countriesWithoutEuNaftaAu, { acronym: 'other', object: countriesStats });\r\n\r\n  console.log('\\n🔸 The name of the organization with the largest population:', sortObject(countriesStats, { value: 'population', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 Name of the organization with the second largest population:', sortObject(countriesStats, { value: 'population', place: 2, sort: 'desc' }));\r\n  console.log('\\n🔸 The name of the organization occupying the third largest area:', sortObject(countriesStats, { value: 'area', place: 3, sort: 'desc' }));\r\n  console.log(\r\n    '\\n🔸 Names of organizations with the largest and smallest number of languages assigned to them:\\n',\r\n    'Largest:',\r\n    sortObject(countriesStats, { value: 'languages', place: 1, sort: 'desc' }),\r\n    '\\n Smallest:',\r\n    sortObject(countriesStats, { value: 'languages', place: 1, sort: 'asc' })\r\n  );\r\n  console.log('\\n🔸 Name of the organization using the largest number of currencies:', sortObject(countriesStats, { value: 'currencies', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 The name of the organization with the fewest number of member states:', sortObject(countriesStats, { value: 'countries', place: 1, sort: 'asc' }));\r\n  console.log('\\n🔸 Native name of the language used in the greatest number of countries:', sortObjectLang(countriesStats, { value: 'area', place: 1, sort: 'desc' }));\r\n  console.log('\\n🔸 Native name of the language used by the smallest number of people:', sortObjectLang(countriesStats, { value: 'population', place: 1, sort: 'asc' }));\r\n  console.log(\r\n    '\\n🔸 Native names of the languages used in the largest and smallest area:\\n',\r\n    'Largest:',\r\n    sortObjectLang(countriesStats, { value: 'area', place: 1, sort: 'desc' }),\r\n    '\\n Smallest:',\r\n    sortObjectLang(countriesStats, { value: 'area', place: 1, sort: 'asc' })\r\n  );\r\n\r\n  console.log('\\n🟠 EU, NAFTA, AU and other countries: \\n', countriesStats);\r\n};\r\n\r\nexport const getCountryStats = (array: Country[], arg: { acronym: keyof CountriesStats; object: CountriesStats }) => {\r\n  const path = arg.object[arg.acronym];\r\n\r\n  array.forEach((country) => {\r\n    path.countries = [...path.countries, country.nativeName];\r\n    country.currencies?.every((currencie) => (path.currencies = [...path.currencies, currencie.name]));\r\n    path.population += country.population;\r\n    typeof country.area === 'number' && (path.area += country.area);\r\n\r\n    const langKeys = Object.keys(path.languages);\r\n    const countryLang = country.languages.map((lang) => lang.iso639_1);\r\n\r\n    countryLang.forEach((lang, i) => {\r\n      if (lang === langKeys[i]) {\r\n        path.languages[lang].name.push(country.languages[i].nativeName);\r\n        path.languages[lang].countries.push(country.alpha3Code);\r\n        path.languages[lang].area += country.area;\r\n        path.languages[lang].population += country.population;\r\n      } else {\r\n        const language = country.languages[i].iso639_1;\r\n        const name = country.alpha3Code;\r\n        const nativeName = country.languages[i].nativeName;\r\n        const area = country.area;\r\n        const population = country.population;\r\n        path.languages = { ...path.languages, ...{ [language]: { population, area, name: [nativeName], countries: [name] } } };\r\n      }\r\n    });\r\n  });\r\n\r\n  const unique = new Set(path.currencies);\r\n  path.currencies = Array.from(unique);\r\n  path.countries = path.countries.sort().reverse();\r\n\r\n  return arg.object;\r\n};\r\n\r\nexport const sortObject = (object: CountriesStats, arg: { value: keyof CountryStat; place: number; sort: string }): string => {\r\n  const countryKeys = Object.keys(object);\r\n  const arrayOfValues: string[] | number[] = [];\r\n  const index = arg.place - 1;\r\n  const result: string[] = [];\r\n\r\n  countryKeys.forEach((key) => {\r\n    const value = object[key][arg.value];\r\n    const valueLength = Object.getOwnPropertyNames(value).length;\r\n    if (typeof value === 'object') arrayOfValues.push(valueLength);\r\n    if (typeof value !== 'object') arrayOfValues.push(value);\r\n  });\r\n\r\n  const sortedSetOfValues: any = new Set(sortArrayOfValues(arg.sort, arrayOfValues));\r\n  const sortedArrayOfValues = Array.from(sortedSetOfValues);\r\n\r\n  countryKeys.forEach((key) => {\r\n    const value = object[key][arg.value];\r\n    const valueLength = Object.getOwnPropertyNames(value).length;\r\n\r\n    if (typeof value === 'object' && valueLength === sortedArrayOfValues[index]) result.push(key);\r\n    if (typeof value !== 'object' && value === sortedArrayOfValues[index]) result.push(key);\r\n  });\r\n\r\n  return result.toString();\r\n};\r\n\r\nexport const sortObjectLang = (object: CountriesStats, arg: { value: keyof LangStat; place: number; sort: string }): string => {\r\n  const countryKeys = Object.keys(object);\r\n  const arrayOfValues: string[] | number[] = [];\r\n  const index = arg.place - 1;\r\n  const result: string[] = [];\r\n\r\n  countryKeys.forEach((countryKey) => {\r\n    const languagesKeys = Object.keys(object[countryKey].languages);\r\n\r\n    languagesKeys.forEach((langKey) => {\r\n      const value = object[countryKey].languages[langKey][arg.value];\r\n      const valueLength = Array.isArray(value) && value.length;\r\n      if (Array.isArray(value)) arrayOfValues.push(valueLength);\r\n      if (typeof value !== 'object') arrayOfValues.push(value);\r\n    });\r\n  });\r\n\r\n  const sortedSetOfValues: any = new Set(sortArrayOfValues(arg.sort, arrayOfValues));\r\n  const sortedArrayOfValues = Array.from(sortedSetOfValues);\r\n\r\n  countryKeys.forEach((countryKey) => {\r\n    const languagesKeys = Object.keys(object[countryKey].languages);\r\n\r\n    languagesKeys.forEach((langKey) => {\r\n      const value = object[countryKey].languages[langKey][arg.value];\r\n      const valueLength = Array.isArray(value) && value.length;\r\n\r\n      if (typeof value === 'object' && valueLength === sortedArrayOfValues[index]) result.push(object[countryKey].languages[langKey].name[0]);\r\n      if (typeof value !== 'object' && value === sortedArrayOfValues[index]) result.push(object[countryKey].languages[langKey].name[0]);\r\n    });\r\n  });\r\n\r\n  const set = new Set(result);\r\n  const endResult = Array.from(set);\r\n  return endResult.toString();\r\n};\r\n\r\nconst sortArrayOfValues = (sort: string, array: string[] | number[]): string[] | number[] => {\r\n  if (sort === 'desc') {\r\n    return array.sort((a: any, b: any) => b - a);\r\n  } else {\r\n    return array.sort((a: any, b: any) => a - b);\r\n  }\r\n};\r\n","import { configuration } from './config';\r\nimport { Task1 } from './task1/Task1';\r\nimport { Task2 } from './task2/Task2';\r\nimport { Task3 } from './task3/Task3';\r\n\r\nwindow.onload = () => {\r\n  const localStorageSavedData: string | null = localStorage.getItem(configuration.countriesKey);\r\n  const localStorageCountriesData = typeof localStorageSavedData === 'string' && JSON.parse(localStorageSavedData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 1     ║\\n╚═══════════════╝');\r\n  Task1(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 2     ║\\n╚═══════════════╝');\r\n  Task2(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║    Task 3     ║\\n╚═══════════════╝');\r\n  Task3(localStorageCountriesData);\r\n\r\n  console.log('╔═══════════════╗\\n║     Logs      ║\\n╚═══════════════╝');\r\n};\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}