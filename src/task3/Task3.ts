import { getAllCountriesByTypeAndValue } from '../task2/Task2';
import { acronyms, Country } from '../types/interfaces';

export const Task3 = (localStorageCountriesData: Country[]) => {
  const acronyms: acronyms = {
    EU: {
      countries: [],
      population: 0,
      languages: {},
      currencies: [],
    },
    NAFTA: {
      countries: [],
      population: 0,
      languages: {},
      currencies: [],
    },
    AU: {
      countries: [],
      population: 0,
      languages: {},
      currencies: [],
    },
    other: {
      countries: [],
      population: 0,
      languages: {},
      currencies: [],
    },
  };

  const euCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'EU', true);
  const naftaCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'NAFTA', true);
  const auCountries: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'AU', true);
  const countriesWithoutEuNaftaAu: Country[] = getAllCountriesByTypeAndValue(localStorageCountriesData, 'regionalBlocs.acronym', 'AU EU NAFTA', false);

  const langObject = {
    iso639_1: {
      countries: ['alpha3Code'],
      population: 0,
      area: 0,
      name: 'nativeName',
    },
  };

  euCountries.forEach((country) => {
    acronyms.EU.countries.push(country.nativeName);
    country.currencies.every((currencie) => acronyms.EU.currencies.push(currencie.name));
    acronyms.EU.population += country.population;
  });

  naftaCountries.forEach((country) => {
    acronyms.NAFTA.countries.push(country.nativeName);
    country.currencies.every((currencie) => acronyms.NAFTA.currencies.push(currencie.name));
    acronyms.NAFTA.population += country.population;
  });

  auCountries.forEach((country) => {
    acronyms.AU.countries.push(country.nativeName);
    country.currencies.every((currencie) => acronyms.AU.currencies.push(currencie.name));
    acronyms.AU.population += country.population;
  });

  countriesWithoutEuNaftaAu.forEach((country) => {
    acronyms.other.countries.push(country.nativeName);
    country.currencies?.every((currencie) => acronyms.other.currencies.push(currencie.name));
    acronyms.other.population += country.population;
  });

  const keys = Object.keys(acronyms);
  keys.forEach((key) => {
    acronyms[key].currencies = new Set(acronyms[key].currencies);
    acronyms[key].countries = acronyms[key].countries.sort().reverse();
  });

  console.log('\nğŸ”¸ EU, NAFTA, AU and other countries: \n', acronyms);
};

//âœ” * StwÃ³rz nowy obiekt. Powinien on posiadaÄ‡ klucze EU, NAFTA, AU oraz other. KaÅ¼dy z tych kluczy bÄ™dzie zawieraÅ‚ obiekt o kluczach countries, population, languages oraz currencies.
//   WartoÅ›ciami countries oraz currencies sÄ… puste tablice, wartoÅ›Ä‡ population wynosi 0. WartoÅ›Ä‡ languages to pusty obiekt.
//âœ” * W TP znajdÅº kraje naleÅ¼Ä…ce do EU, NAFTA albo AU. JeÅ›li paÅ„stwo naleÅ¼y do ktÃ³rejÅ› z tych grup, umieÅ›Ä‡ jego dane w stosownym obiekcie: natywnÄ… nazwÄ™ w tablicy countries, uÅ¼ywane przez niÄ…
//   waluty w tablicy currencies oraz dodaj jej populacjÄ™ do wartoÅ›ci population.
//? * SprawdÅº jÄ™zyki przypisane do kraju. UÅ¼yj ich kodu iso639_1 jako klucza dla obiektu languages. JeÅ›li danego jÄ™zyka nie ma w obiekcie languages, przypisz do niego nowy obiekt o kluczach
//   countries(wartoÅ›Ä‡ poczÄ…tkowa: pusta arajka), population(0), area(0) oraz name(pusty string). JeÅ›li dany jÄ™zyk znajduje siÄ™ w obiekcie languages, dodaj do tablicy countries kod alpha3code
//   kraju, w ktÃ³rym jest uÅ¼ywany, populacjÄ™ tego kraju do wartoÅ›ci population, obszar kraju do wartoÅ›ci area, a do name przypisz natywnÄ… nazwÄ™ tego jÄ™zyka.
//-âœ” * JeÅ›li kraj nie naleÅ¼y do Å¼adnej z podanych wczeÅ›niej organizacji wykonaj kroki z poprzednich dwÃ³ch punktÃ³w, ale dane umieÅ›Ä‡ w tablicy other.
// * JeÅ›li kraj naleÅ¼y do wiÄ™cej, niÅ¼ jednej organizacji, umieÅ›Ä‡ jego dane we wszystkich pasujÄ…cych obiektach blokÃ³w. Blok other moÅ¼e siÄ™ powtarzaÄ‡.
//âœ” * Dla kaÅ¼dej organizacji dane w tablicy currencies nie mogÄ… siÄ™ powtarzaÄ‡.
//âœ” * Dla kaÅ¼dej organizacji dane w tablicy countries powinny byÄ‡ posortowane alfabetycznie z do a.
// * WyÅ›wietl w konsoli:
//  - NazwÄ™ organizacji o najwiÄ™kszej populacji,
//  - NazwÄ™ organizacji o drugiej najwiÄ™kszej gÄ™stoÅ›ci zaludnienia,
//  - NazwÄ™ organizacji zajmujÄ…cej trzeci najwiÄ™kszy obszar,
//  - Nazwy organizacji o najwiÄ™kszej i najmniejszej przypisanej do nich liczbie jÄ™zykÃ³w,
//  - NazwÄ™ organizacji wykorzystujÄ…cej najwiÄ™kszÄ… liczbÄ™ walut,
//  - NazwÄ™ organizacji posiadajÄ…cej najmniejszÄ… liczbÄ™ paÅ„stw czÅ‚onkowskich,
//  - NatywnÄ… nazwÄ™ jÄ™zyka wykorzystywanego w najwiÄ™kszej liczbie krajÃ³w,
//  - NatywnÄ… nazwÄ™ jÄ™zyka wykorzystywanego przez najmniejszÄ… liczbÄ™ ludzi,
//  - Natywne nazwy jÄ™zykÃ³w wykorzystywanych na najwiÄ™kszym i najmniejszym obszarze.
// * W przypadku remisÃ³w wyÅ›wietl wszystkich zwyciÄ™zcÃ³w.
